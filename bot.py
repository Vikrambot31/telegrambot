from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import telegram.error

# –¢–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é –≤ –∫–æ–¥–µ
TOKEN = "7419809164:AAHofDyitmblhjCszawIJpzdHTmwgANIHrw"

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
keyboard = [
    ["üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä"],
    ["üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç 15$"],
    ["üëë –ü–∞–∫–µ—Ç VIP –æ—Ç 60$"],
    ["üìå –û–±–æ –º–Ω–µ / –û—Ç–∑—ã–≤—ã"],
    ["üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π"]
]
markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ Telegram
def get_inline_button():
    return InlineKeyboardMarkup(
        [[InlineKeyboardButton("–Ω–∞–ø–∏—Å–∞—Ç—å –í–∏–∫—Ä–∞–º—É –ª–∏—á–Ω–æ", url="https://t.me/Vikram_2027")]]
    )

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id

    try:
        with open("s1.webp", "rb") as sticker:
            await context.bot.send_sticker(chat_id, sticker)
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞]: {e}")

    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, —Å –≤–∞–º–∏ –í–∏–∫—Ä–∞–º!", reply_markup=markup)

    try:
        with open("intro-0.ogg", "rb") as audio:
            await context.bot.send_audio(chat_id, audio)
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ intro-0.ogg]: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text.lower()

    if "–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π" in text:
        await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.")
        for fname in ["pic1.png", "pic2.png", "pic3.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("intro-1.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ intro-1]: {e}")

    elif "–ø–ª–∞—Ç–Ω—ã–π" in text:
        await update.message.reply_text("üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∏–∂–µ.")
        for fname in ["pic4.png", "pic4-1.png", "pic5.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("intro-2.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ intro-2]: {e}")

    elif "vip" in text:
        await update.message.reply_text("üëë –ü–∞–∫–µ—Ç VIP: —Å–º–æ—Ç—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–∏–∂–µ.")
        for fname in ["pic6.png", "pic5.png", "Voprosi.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("intro-3.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ intro-3]: {e}")

    elif "–æ—Ç–∑—ã–≤—ã" in text or "–æ–±–æ –º–Ω–µ" in text:
        await update.message.reply_text("üìå –û—Ç–∑—ã–≤—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        try:
            with open("o1.png", "rb") as img:
                await context.bot.send_photo(chat_id, img)
            with open("primer_razbora.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ –æ—Ç–∑—ã–≤–æ–≤]: {e}")
        await update.message.reply_text("üîó Instagram (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ): https://www.instagram.com/vikram_hd_2027")

    elif "—Å–≤—è–∑–∞—Ç—å—Å—è" in text:
        await update.message.reply_text("–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –í–∏–∫—Ä–∞–º—É:")
        await update.message.reply_text("https://t.me/Vikram_2027")

    else:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ –º–µ–Ω—é –Ω–∏–∂–µ ‚¨áÔ∏è")

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    try:
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—ã...")
        app.run_polling()
    except telegram.error.Conflict:
        print("‚ö†Ô∏è –ö–æ–Ω—Ñ–ª–∏–∫—Ç: –±–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω –≥–¥–µ-—Ç–æ –µ—â—ë.")
