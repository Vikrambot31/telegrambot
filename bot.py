import os
from telegram import Update, ReplyKeyboardMarkup, InputFile, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import logging

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏ –≤ Railway)
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è (—É—Å—Ç–∞–Ω–æ–≤–∏ BOT_TOKEN –≤ Railway)
TOKEN = os.getenv("BOT_TOKEN") or "7419809164:AAHofDyitmblhjCszawIJpzdHTmwgANIHrw"  # –≤—Ä–µ–º–µ–Ω–Ω–æ –≤—à–∏—Ç

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = [["–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä"], ["–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç 15 $"], ["–ü–∞–∫–µ—Ç –í–ò–ü –æ—Ç 60 $"], ["–û–±–æ –º–Ω–µ –∏ –æ—Ç–∑—ã–≤—ã"], ["–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π"]]

# –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    try:
        await context.bot.send_sticker(chat_id=chat_id, sticker=InputFile("s1.webp"))
        await context.bot.send_audio(chat_id=chat_id, audio=InputFile("intro-0.ogg"))
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}")
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å! –° –≤–∞–º–∏ –í–∏–∫—Ä–∞–º!",
        reply_markup=ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
    )

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    chat_id = update.effective_chat.id

    if "–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π" in text:
        await update.message.reply_text("–û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é üëá")
        await send_files(context, chat_id, ["pic2.png", "pic3.png"], "intro-1.ogg")

    elif "–ø–ª–∞—Ç–Ω—ã–π" in text:
        await update.message.reply_text("–î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–Ω–æ–≥–æ —Ä–∞–∑–±–æ—Ä–∞ üëá")
        await send_files(context, chat_id, ["pic4.png", "pic4.1.png", "pic5.png"], "intro-2.ogg")

    elif "–≤–∏–ø" in text:
        await update.message.reply_text("–ü–∞–∫–µ—Ç –í–ò–ü –≤–∫–ª—é—á–∞–µ—Ç –≤—Å—ë üëá")
        await send_files(context, chat_id, ["pic6.png", "Voprosi.png"], "intro-3.ogg")

    elif "–æ–±–æ –º–Ω–µ" in text or "–æ—Ç–∑—ã–≤—ã" in text:
        await update.message.reply_text("–û—Ç–∑—ã–≤—ã –æ–±–æ –º–Ω–µ –∏ –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ üëá")
        try:
            await context.bot.send_photo(chat_id=chat_id, photo=InputFile("o1.png"))
            await context.bot.send_audio(chat_id=chat_id, audio=InputFile("primer_razbora.ogg"))
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–æ–≤: {e}")

    elif "—Å–≤—è–∑–∞—Ç—å—Å—è" in text:
        # ‚õîÔ∏è –°—Å—ã–ª–∫–∞ –±–µ–∑ –∞–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await update.message.reply_text(
            "t.me/Vikram_2027",
            disable_web_page_preview=True
        )

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def send_files(context, chat_id, images, audio_file):
    for img in images:
        try:
            await context.bot.send_photo(chat_id=chat_id, photo=InputFile(img))
        except Exception as e:
            logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img}: {e}")
    try:
        await context.bot.send_audio(chat_id=chat_id, audio=InputFile(audio_file))
    except Exception as e:
        logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—É–¥–∏–æ {audio_file}: {e}")
    await context.bot.send_message(chat_id=chat_id, text="–Ω–∞–ø–∏—Å–∞—Ç—å –í–∏–∫—Ä–∞–º—É –ª–∏—á–Ω–æ", reply_markup=InlineKeyboardMarkup(
        [[InlineKeyboardButton("–Ω–∞–ø–∏—Å–∞—Ç—å –í–∏–∫—Ä–∞–º—É –ª–∏—á–Ω–æ", url="https://t.me/Vikram_2027")]]
    ))

# –ó–∞–ø—É—Å–∫
def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # ‚úÖ –¢–æ–ª—å–∫–æ polling ‚Äî –±–µ–∑ webhook, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—ã...")
    app.run_polling()

if __name__ == "__main__":
    main()
