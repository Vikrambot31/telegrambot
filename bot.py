from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

TOKEN = "7419809164:AAHofDyitmblhjCszawIJpzdHTmwgANIHrw"

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
keyboard = [
    ["üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä"],
    ["üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç 15$"],
    ["üëë –ü–∞–∫–µ—Ç VIP –æ—Ç 60$"],
    ["üìå –û–±–æ –º–Ω–µ / –û—Ç–∑—ã–≤—ã"]
]
markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –ö–Ω–æ–ø–∫–∞ —Ñ–æ—Ä–º—ã
def get_form_button():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üìù –ñ–ú–ò –°–Æ–î–ê ‚Äî –∑–∞–ø–æ–ª–Ω–∏ –§–û–†–ú–£", url="https://freehumandesignchart.com/")]
    ])

# –ö–Ω–æ–ø–∫–∞ —Å–≤—è–∑–∏ —Å –í–∏–∫—Ä–∞–º–æ–º
def get_contact_button():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –í–∏–∫—Ä–∞–º—É –ª–∏—á–Ω–æ", url="https://t.me/Vikram_2027")]
    ])

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, —Å –≤–∞–º–∏ –í–∏–∫—Ä–∞–º!", reply_markup=markup)
    try:
        with open("s1.webp", "rb") as sticker:
            await context.bot.send_sticker(chat_id, sticker)
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞]: {e}")
    try:
        with open("intro-0.ogg", "rb") as audio:
            await context.bot.send_audio(chat_id, audio)
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ intro-0.ogg]: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text.lower()

    if "–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π" in text:
        await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä.")
        for fname in ["pic1.png", "pic2.png", "pic3.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("x1.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ x1.ogg]: {e}")
        await update.message.reply_text("üëá", reply_markup=get_form_button())

    elif "–ø–ª–∞—Ç–Ω—ã–π" in text:
        await update.message.reply_text("üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∏–∂–µ.")
        for fname in ["pic4.png", "pic4-1.png", "pic5.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("x2.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ x2.ogg]: {e}")
        await update.message.reply_text("üëá", reply_markup=get_contact_button())

    elif "vip" in text:
        await update.message.reply_text("üëë –ü–∞–∫–µ—Ç VIP: —Å–º–æ—Ç—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–∏–∂–µ.")
        for fname in ["pic6.png", "pic5.png", "Voprosi.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("x3.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ x3.ogg]: {e}")
        await update.message.reply_text("üëá", reply_markup=get_contact_button())

    elif "–æ–±–æ –º–Ω–µ" in text or "–æ—Ç–∑—ã–≤—ã" in text:
        await update.message.reply_text(
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–æ –æ—Ç–∑—ã–≤—ã –∏ —Å–∏—Å—Ç–µ–º—É ‚Äî –º–æ–π Instagram:\n"
            "https://www.instagram.com/vikram_hd_2027\n"
            "–ù–∏–∂–µ ‚Äî –ø—Ä–∏–º–µ—Ä—ã —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–µ—Å—Å–∏–π:"
        )
        try:
            with open("primer_razbora0.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ primer_razbora0.ogg]: {e}")
        try:
            with open("primer_razbora.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ primer_razbora.ogg]: {e}")
        await update.message.reply_text("üëá", reply_markup=get_contact_button())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {context.error}")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_error_handler(error_handler)
    app.run_polling()

if __name__ == "__main__":
    main()
