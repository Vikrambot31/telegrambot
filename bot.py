import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
)

TOKEN = os.getenv("TOKEN")
PORT = int(os.environ.get("PORT", 8443))

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = [
    ["* –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä"],
    ["üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç 15$"],
    ["üëë –ü–∞–∫–µ—Ç VIP –æ—Ç 60$"],
    ["üìç –û–±–æ –ú–Ω–µ / –°–∏—Å—Ç–µ–º–∞ / –û—Ç–∑—ã–≤—ã"]
]

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
    try:
        with open("s1.webp", "rb") as sticker:
            await context.bot.send_sticker(chat_id=chat_id, sticker=sticker)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∏–∫–µ—Ä–∞: {e}")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ .ogg)
    try:
        with open("intro-0.ogg", "rb") as voice:
            await context.bot.send_voice(chat_id=chat_id, voice=voice)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ: {e}")

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –∫–Ω–æ–ø–∫–∏
    await context.bot.send_message(
        chat_id=chat_id,
        text="–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –Ω–∞–∂–º–∏—Ç–µ —Å–ª–æ–≤–æ '—Ä–∞–∑–±–æ—Ä' –¥–ª—è —Å—Ç–∞—Ä—Ç–∞.",
        reply_markup=ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()

    if "—Ä–∞–∑–±–æ—Ä" in text:
        await context.bot.send_message(chat_id=update.effective_chat.id, text="–í—ã –≤—ã–±—Ä–∞–ª–∏ '—Ä–∞–∑–±–æ—Ä'. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.")
    elif "–æ—Ç–∑—ã–≤—ã" in text:
        await update.message.reply_text("–í–æ—Ç –æ—Ç–∑—ã–≤—ã –æ–±–æ –º–Ω–µ:")
        try:
            with open("o1.png", "rb") as photo:
                await context.bot.send_photo(chat_id=update.effective_chat.id, photo=photo)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –æ—Ç–∑—ã–≤–∞: {e}")
    else:
        await context.bot.send_message(chat_id=update.effective_chat.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.")

# –ó–∞–ø—É—Å–∫
def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=f"https://vikrambot.onrender.com/{TOKEN}"
    )

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ polling.")
    app.run_polling()

