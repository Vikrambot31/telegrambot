from telegram import Update, ReplyKeyboardMarkup, InputMediaPhoto
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import os
import asyncio

# ‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("BOT_TOKEN") or "7419809164:AAFq1oaDm6KUWp57kQhaPt1I6gwIo1ihnB4"

# ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
ALLOWED_IDS = [446393818]
BLACKLIST = set()

# ‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–º–µ–Ω—é –≤–Ω–∏–∑—É)
menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        ["üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä"],
        ["üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç 15$"],
        ["üëë –ü–∞–∫–µ—Ç VIP –æ—Ç 60$"],
        ["üìú –û–±–æ –º–Ω–µ / –û—Ç–∑—ã–≤—ã"]
    ],
    resize_keyboard=True
)

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å–ø–∞–º
def is_suspicious(text: str) -> bool:
    return any(word in text.lower() for word in ["http://", "https://", "vpn", "bot", "admin"])

# üü¢ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if not user or user.id not in ALLOWED_IDS or user.id in BLACKLIST:
        return
    await context.bot.send_photo(chat_id=user.id, photo=open("s1.webp", "rb"))
    await context.bot.send_voice(chat_id=user.id, voice=open("intro-0.ogg", "rb"))
    await update.message.reply_text("üëá –ù–∏–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu_keyboard)

# üí¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = update.message.text

    if not user or user.id not in ALLOWED_IDS or user.id in BLACKLIST:
        return

    if is_suspicious(text):
        await update.message.reply_text("‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.")
        BLACKLIST.add(user.id)
        return

    if text == "üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä":
        await context.bot.send_media_group(chat_id=user.id, media=[
            InputMediaPhoto(open("pic1.png", "rb")),
            InputMediaPhoto(open("pic2.png", "rb")),
            InputMediaPhoto(open("pic3.png", "rb")),
        ])
        await context.bot.send_voice(chat_id=user.id, voice=open("x1.ogg", "rb"))
        await update.message.reply_text("–§–æ—Ä–º–∞: https://freehumandesignchart.com/")
        await update.message.reply_text("–ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ üëâ https://t.me/Vikram_2027")

    elif text == "üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç 15$":
        await context.bot.send_photo(chat_id=user.id, photo=open("pic4.png", "rb"))
        await context.bot.send_photo(chat_id=user.id, photo=open("pic5.png", "rb"))
        await context.bot.send_voice(chat_id=user.id, voice=open("x2.ogg", "rb"))
        await update.message.reply_text("–ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ üëâ https://t.me/Vikram_2027")

    elif text == "üëë –ü–∞–∫–µ—Ç VIP –æ—Ç 60$":
        await context.bot.send_photo(chat_id=user.id, photo=open("pic6.png", "rb"))
        await context.bot.send_photo(chat_id=user.id, photo=open("pic5.png", "rb"))
        await context.bot.send_photo(chat_id=user.id, photo=open("Voprosi.png", "rb"))
        await context.bot.send_voice(chat_id=user.id, voice=open("x3.ogg", "rb"))
        await update.message.reply_text("–ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ üëâ https://t.me/Vikram_2027")

    elif text == "üìú –û–±–æ –º–Ω–µ / –û—Ç–∑—ã–≤—ã":
        await update.message.reply_text("–û—Ç–∑—ã–≤—ã –∏ —Å–∏—Å—Ç–µ–º–∞:\nhttps://www.instagram.com/vikram_hd_2027")
        await context.bot.send_document(chat_id=user.id, document=open("Prognoz_Love_god.pdf", "rb"))
        await context.bot.send_document(chat_id=user.id, document=open("primer_prognoz2.pdf", "rb"))
        await context.bot.send_voice(chat_id=user.id, voice=open("primer_razbora.ogg", "rb"))
        await update.message.reply_text("–ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ üëâ https://t.me/Vikram_2027")

# üöÄ –ó–∞–ø—É—Å–∫
async def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å —Ç–æ–∫–µ–Ω–æ–º: {TOKEN}")
    await app.run_polling()

# üîß –ë–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ asyncio
if __name__ == '__main__':
    try:
        asyncio.run(main())
    except RuntimeError as e:
        if str(e).startswith("This event loop is already running"):
            loop = asyncio.get_event_loop()
            loop.create_task(main())
            loop.run_forever()
        else:
            raise
