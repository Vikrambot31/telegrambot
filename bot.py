import os
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import telegram.error

# –ü—Ä—è–º–æ –≤–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN = "7419809164:AAHofDyitmblhjCszawIJpzdHTmwgANIHrw"

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
keyboard = [
    ["üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä"],
    ["üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç 15$"],
    ["üëë –ü–∞–∫–µ—Ç VIP –æ—Ç 60$"],
    ["üìå –û–±–æ –º–Ω–µ / –û—Ç–∑—ã–≤—ã"]
]
markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–Ω–∞–ø–∏—Å–∞—Ç—å –í–∏–∫—Ä–∞–º—É –ª–∏—á–Ω–æ"
def get_inline_button():
    return InlineKeyboardMarkup([[InlineKeyboardButton("–Ω–∞–ø–∏—Å–∞—Ç—å –í–∏–∫—Ä–∞–º—É –ª–∏—á–Ω–æ", url="https://t.me/Vikram_2027")]])

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id

    # –°—Ç–∏–∫–µ—Ä
    try:
        with open("s1.webp", "rb") as sticker:
            await context.bot.send_sticker(chat_id, sticker)
    except Exception as e:
        print(f"[–°—Ç–∏–∫–µ—Ä –æ—à–∏–±–∫–∞]: {e}")

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, —Å –≤–∞–º–∏ –í–∏–∫—Ä–∞–º!", reply_markup=markup)

    # –ê—É–¥–∏–æ
    try:
        with open("intro-0.ogg", "rb") as audio:
            await context.bot.send_audio(chat_id, audio)
    except Exception as e:
        print(f"[–ê—É–¥–∏–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –æ—à–∏–±–∫–∞]: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text.lower()

    if "–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π" in text:
        await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.")
        for fname in ["pic1.png", "pic2.png", "pic3.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("intro-1.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ intro-1]: {e}")
        await update.message.reply_text(" ", reply_markup=get_inline_button())

    elif "–ø–ª–∞—Ç–Ω—ã–π" in text:
        await update.message.reply_text("üí∏ –ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∏–∂–µ.")
        for fname in ["pic4.png", "pic4-1.png", "pic5.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("intro-2.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ intro-2]: {e}")
        await update.message.reply_text(" ", reply_markup=get_inline_button())

    elif "vip" in text:
        await update.message.reply_text("üëë –ü–∞–∫–µ—Ç VIP: —Å–º–æ—Ç—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–∏–∂–µ.")
        for fname in ["pic6.png", "pic5.png", "Voprosi.png"]:
            try:
                with open(fname, "rb") as img:
                    await context.bot.send_photo(chat_id, img)
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {fname}]: {e}")
        try:
            with open("intro-3.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ intro-3]: {e}")
        await update.message.reply_text(" ", reply_markup=get_inline_button())

    elif "–æ—Ç–∑—ã–≤—ã" in text or "–æ–±–æ –º–Ω–µ" in text:
        await update.message.reply_text("üìå –û—Ç–∑—ã–≤—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        try:
            with open("o1.png", "rb") as img:
                await context.bot.send_photo(chat_id, img)
            with open("primer_razbora.ogg", "rb") as audio:
                await context.bot.send_audio(chat_id, audio)
        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞ –æ—Ç–∑—ã–≤–æ–≤]: {e}")
        await update.message.reply_text("üîó Instagram: https://www.instagram.com/vikram_hd_2027")
        await update.message.reply_text(" ", reply_markup=get_inline_button())

    else:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    try:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
        app.run_polling()
    except telegram.error.Conflict:
        print("‚ö†Ô∏è –ë–æ—Ç —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≥–¥–µ-—Ç–æ –µ—â—ë. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ç–æ—Ä–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä.")
